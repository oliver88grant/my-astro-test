---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  isFirstPage?: boolean;
  navClass?: string;
  ulClass?: string;
  liClass?: string;
}

const { currentPage, totalPages, baseUrl, navClass, ulClass, liClass } = Astro.props;

const generatePaginationArray = (current: number, total: number) => {
  const delta = 2;
  const range = [];
  const rangeWithDots = [];

  for (
    let i = Math.max(2, current - delta);
    i <= Math.min(total - 1, current + delta);
    i++
  ) {
    range.push(i);
  }

  if (current - delta > 2) {
    rangeWithDots.push(1, '...');
  } else {
    rangeWithDots.push(1);
  }

  rangeWithDots.push(...range);

  if (current + delta < total - 1) {
    rangeWithDots.push('...', total);
  } else if (total > 1) {
    rangeWithDots.push(total);
  }

  return rangeWithDots;
};

const paginationArray = generatePaginationArray(currentPage, totalPages);
---

<nav class=`pagination ${navClass}` aria-label="Pagination">
  <ul class=`pagination-list ${ulClass}`>
    <!-- Previous button -->
    <li class=`${liClass}`>
      <a
        href={currentPage > 1 ? `${baseUrl}/page/${currentPage - 1}` : '#'}
        class={`pagination-link ${currentPage === 1 ? 'disabled' : ''} `}
        aria-label="Previous page"
      >
        Previous
      </a>
    </li>

    <!-- Page numbers -->
    {
      paginationArray.map((page) => (
        <li class={liClass}>
          {page === '...' ? (
            <span class="pagination-ellipsis">&hellip;</span>
          ) : (
            <a
              href={`${baseUrl}/${page === 1 ? '' : `page/${page}`}`}
              class={`pagination-link ${
                currentPage === page ? 'active' : ''
              }`}
              aria-label={`Go to page ${page}`}
              aria-current={currentPage === page ? 'page' : undefined}
            >
              {page}
            </a>
          )}
        </li>
      ))
    }

    <!-- Next button -->
    <li class={liClass}>
      <a
        href={
          currentPage < totalPages ? `${baseUrl}/page/${currentPage + 1}` : '#'
        }
        class={`pagination-link ${
          currentPage === totalPages ? 'disabled' : ''
        }`}
        aria-label="Next page"
      >
        Next
      </a>
    </li>
  </ul>
</nav>

<style>
  .pagination {
    margin: 2rem 0;
  }

  .pagination-list {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    gap: 0.5rem;
    justify-content: center;
    align-items: center;
  }

  .pagination-link {
    display: inline-flex;
    padding: 0.5rem 1rem;
    text-decoration: none;
    color: #333;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    transition: all 0.2s ease;
  }

  .pagination-link:hover:not(.disabled) {
    background-color: #f0f0f0;
  }

  .pagination-link.active {
    background-color: #007bff;
    color: white;
    border-color: #007bff;
  }

  .pagination-link.disabled {
    color: #999;
    pointer-events: none;
  }

  .pagination-ellipsis {
    padding: 0.5rem;
    color: #666;
  }
</style>
