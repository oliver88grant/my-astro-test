---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  isFirstPage?: boolean;
  navClass?: string;
  ulClass?: string;
  liClass?: string;
}

const { currentPage, totalPages, baseUrl, navClass, ulClass, liClass } = Astro.props;

const generatePaginationArray = (current: number, total: number) => {
  const delta = 2;
  const range = [];
  const rangeWithDots = [];

  for (
    let i = Math.max(2, current - delta);
    i <= Math.min(total - 1, current + delta);
    i++
  ) {
    range.push(i);
  }

  if (current - delta > 2) {
    rangeWithDots.push(1, '...');
  } else {
    rangeWithDots.push(1);
  }

  rangeWithDots.push(...range);

  if (current + delta < total - 1) {
    rangeWithDots.push('...', total);
  } else if (total > 1) {
    rangeWithDots.push(total);
  }

  return rangeWithDots;
};

const paginationArray = generatePaginationArray(currentPage, totalPages);
---

<nav class=`pagination ${navClass}` aria-label="Pagination">
  <ul class=`pagination-list items-stretch ${ulClass}`>
    <!-- Previous button -->
    <li class={`pagination-li ${liClass}`}>
      <a
        href={currentPage > 1 ? `${baseUrl}/page/${currentPage - 1}` : '#'}
        class={`pagination-link prev-next ${currentPage === 1 ? 'disabled' : ''} `}
        aria-label="Previous page"
      >
        <span class="sr-only">Previous</span>
        <svg viewBox="64 64 896 896" focusable="false" data-icon="left" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"></path></svg>
      </a>
    </li>

    <!-- Page numbers -->
    {
      paginationArray.map((page) => (
        <li class={`pagination-li ${liClass}`}>
          {page === '...' ? (
            <span class="pagination-ellipsis">&hellip;</span>
          ) : (
            <a
              href={`${baseUrl}/${page === 1 ? '' : `page/${page}`}`}
              class={`pagination-link ${
                currentPage === page ? 'active' : ''
              }`}
              aria-label={`Go to page ${page}`}
              aria-current={currentPage === page ? 'page' : undefined}
            >
              {page}
            </a>
          )}
        </li>
      ))
    }

    <!-- Next button -->
    <li class={`pagination-li ${liClass}`}>
      <a
        href={
          currentPage < totalPages ? `${baseUrl}/page/${currentPage + 1}` : '#'
        }
        class={`pagination-link prev-next ${
          currentPage === totalPages ? 'disabled' : ''
        }`}
        aria-label="Next page"
      >
        <span class="sr-only">Next</span>
        <svg viewBox="64 64 896 896" focusable="false" data-icon="right" width="1em" height="1em" fill="currentColor" aria-hidden="true"><path d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"></path></svg>
      </a>
    </li>
  </ul>
</nav>

<style>
  .pagination {
    margin: 2rem 0;
  }

  .pagination-list {
    display: flex;
    gap: 0.3rem;
  }

  .pagination-link {
    display: inline-flex;
    padding: 0.5rem 0.8rem;
    text-decoration: none;
    color: #333;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    transition: all 0.2s ease;
    &.prev-next{
      display: flex;
      align-items: center;
      height: 100%;
      padding: 0.5rem 0.6rem;;
    }
  }

  .pagination-link:hover:not(.disabled) {
    background-color: var(--color-themecolor-900);
    color: white;
  }

  .pagination-link.active {
    background-color: var(--color-themecolor-800);
    color: white;
    border-color: var(--color-themecolor-800);
  }

  .pagination-link.disabled {
    color: #999;
    pointer-events: none;
  }

  .pagination-ellipsis {
    padding: 0.5rem;
    color: #666;
  }
</style>
